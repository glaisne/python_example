pipeline {

    agent { 
        node { 
            label 'linux'
        }
    }
    environment {
        SUBSCRIPTION_ID     = credentials('Test_Subscription_ID')
        AZURE_TENANT_ID     = credentials('Azure_Tenant_ID')
        CLOUD_CODE = 'az'
        ENVIRONMENT = 'PROD'
    }
    stages {
        stage ("setup") {
            steps {
                sh '''
                echo -e "Install requirements\n========================================================"
                pip3 install -r requirements.txt
                
                echo -e "date json configuration\n========================================================"
                #python3 ./update_config_file.py -s ${SUBSCRIPTION_ID} -e ${ENVIRONMENT} -f ./config/config_az.json
                sed -i "s/<subscription_id>/${SUBSCRIPTION_ID}/" ./config/config_${CLOUD_CODE}_${ENVIRONMENT}.json
                sed -i "s/<environment>/${ENVIRONMENT}/" ./config/config_${CLOUD_CODE}_${ENVIRONMENT}.json
                cat ./config/config_${CLOUD_CODE}_${ENVIRONMENT}.json
                cp ./config/config_${CLOUD_CODE}_${ENVIRONMENT}.json ./tests/infrastructure_tests/config.json
                cat ./tests/infrastructure_tests/config.json
                '''
            }
        }
        stage ("Information") {
            steps {
                sh '''
                echo -e "Python information\n========================================================"
                python3 -V
                pip3 list
                '''
            }
        }
        stage ("Azure Auth") {
            steps {
                echo 'Connecting to Azure and setting the proper subscription'
                // login Azure
                withCredentials([usernamePassword(credentialsId: 'TestingGlaisne', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID')]) {
                sh '''
                    az login \
                        --service-principal \
                        -u $AZURE_CLIENT_ID \
                        -p $AZURE_CLIENT_SECRET \
                        -t ${AZURE_TENANT_ID} \
                        --query "[?isDefault].{name: name, isDefault: isDefault, state: state, TenantId: homeTenantId, id: id}"
                    az account set \
                        -s ${SUBSCRIPTION_ID}
                    az account list \
                        --query "[?isDefault].{name: name, isDefault: isDefault, state: state, TenantId: homeTenantId, id: id}"
                '''
                }
            }
        }
        stage ("Azure_Deploy_Infrastructre") {
            steps {
                sh("python3 ./deploy_az_${CLOUD_CODE}_${ENVIRONMENT}.py -c ./config/config_${CLOUD_CODE}_${ENVIRONMENT}.json")
            }
        }
        stage ("Infrastructure tests") {
            steps {
                sh("python3 -m pytest tests/infrastructure_tests -k _${CLOUD_CODE}_ -vv")
            }
        }
    }
}
